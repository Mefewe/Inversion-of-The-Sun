debug_GUI_decisions = {
	debug_info_popup_gui_open = {
			icon = generic_research

			available = {
				is_ai = no
				is_debug = yes
			}
	
			visible = {
				always = yes
			}

			fire_only_once = no
			cost = 0

			complete_effect = {
				set_variable = { global.open_info_popup }
			}
		}
	}
}
DRG_debug_decisions = {
	debug_drg_begin_civil_war_ember = {		
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = DRG
		}
	
		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			complete_national_focus = DRG_proclaim_dragon_state
			complete_national_focus = DRG_ember_knows_what_right
		}
	}
	debug_drg_begin_civil_war_society = {		
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = DRG
		}
	
		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			complete_national_focus = DRG_proclaim_dragon_state
			complete_national_focus = DRG_protect_the_throne
		}
	}
	debug_drg_load_tree_CW_1 = {		
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = DRG
		}
	
		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			load_focus_tree = DRG_CW_focus_tree_one
			mark_focus_tree_layout_dirty = yes
		}
	}
	debug_drg_load_tree_CW_2 = {		
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = DRG
		}
	
		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			load_focus_tree = DRG_CW_focus_tree_two
			mark_focus_tree_layout_dirty = yes
		}
	}
}
SDL_CONF_debug_decisions = {
	debug_sdl_conf_start_rally = {		
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = SDL
		}
	
		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			country_event = SDL_base.5
		}
	}
	debug_sdl_conf_load_tree_2 = {		
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = SDL
		}
	
		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			load_focus_tree = SDL_focus_tree_two
			mark_focus_tree_layout_dirty = yes
		}
	}
	debug_sdl_conf_load_tree_3.5 = {		
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = SDL
		}
	
		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			load_focus_tree = SDL_focus_tree_two_and_half
			mark_focus_tree_layout_dirty = yes
		}
	}
}
debug_zebrica_decisions = {
debug_tyr_ATO = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			TYR = {
				complete_national_focus = TYR_v_ataku_voini_dobra
			}
		}
	}
	regive_states_to_tyrlitia = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			502 = { set_state_controller_to = TYR }
			951 = { set_state_controller_to = TYR }
			503 = { set_state_controller_to = TYR }
			505 = { set_state_controller_to = TYR }
			952 = { set_state_controller_to = TYR }
			468 = { set_state_controller_to = TYR }
			496 = { set_state_controller_to = TYR }
			953 = { set_state_controller_to = TYR }
			601 = { set_state_controller_to = TYR }
			550 = { set_state_controller_to = TYR }
			956 = { set_state_controller_to = TYR }
			571 = { set_state_controller_to = TYR }
			567 = { set_state_controller_to = TYR }
			578 = { set_state_controller_to = TYR }
			562 = { set_state_controller_to = TYR }
			547 = { set_state_controller_to = TYR }
			529 = { set_state_controller_to = TYR }
			542 = { set_state_controller_to = TYR }
			528 = { set_state_controller_to = TYR }
			954 = { set_state_controller_to = TYR }
			955 = { set_state_controller_to = TYR }
			585 = { set_state_controller_to = TYR }
			612 = { set_state_controller_to = TYR }
			678 = { set_state_controller_to = TYR }
			711 = { set_state_controller_to = TYR }
			635 = { set_state_controller_to = TYR }
			654 = { set_state_controller_to = TYR }
			702 = { set_state_controller_to = TYR }
			608 = { set_state_controller_to = TYR }
			665 = { set_state_controller_to = TYR }
			758 = { set_state_controller_to = TYR }
			957 = { set_state_controller_to = TYR }
			779 = { set_state_controller_to = TYR }
			958 = { set_state_controller_to = TYR }
			802 = { set_state_controller_to = TYR }
			756 = { set_state_controller_to = TYR }
			959 = { set_state_controller_to = TYR }
			712 = { set_state_controller_to = TYR }
			652 = { set_state_controller_to = TYR }
			961 = { set_state_controller_to = TYR }
		}
}
regive_states_to_farazia = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			629 = { set_state_controller_to = FRZ }
			696 = { set_state_controller_to = FRZ }
			745 = { set_state_controller_to = FRZ }
			733 = { set_state_controller_to = FRZ }
			781 = { set_state_controller_to = FRZ }
			813 = { set_state_controller_to = FRZ }
			855 = { set_state_controller_to = FRZ }
			690 = { set_state_controller_to = FRZ }
			746 = { set_state_controller_to = FRZ }
			777 = { set_state_controller_to = FRZ }
			787 = { set_state_controller_to = FRZ }
			823 = { set_state_controller_to = FRZ }
			884 = { set_state_controller_to = FRZ }
			75 = { set_state_controller_to = FRZ }
			912 = { set_state_controller_to = FRZ }
			908 = { set_state_controller_to = FRZ }
			886 = { set_state_controller_to = FRZ }
			833 = { set_state_controller_to = FRZ }
			887 = { set_state_controller_to = FRZ }
			856 = { set_state_controller_to = FRZ }
		}
	}
regive_states_to_sudern_zebrica = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {                        
			618 = { set_state_controller_to = OZB }
			439 = { set_state_controller_to = OZB }
			892 = { set_state_controller_to = OZB }
			418 = { set_state_controller_to = OZB }
			589 = { set_state_controller_to = OZB }
			559 = { set_state_controller_to = OZB }
			430 = { set_state_controller_to = OZB }
			541 = { set_state_controller_to = OZB }
			548 = { set_state_controller_to = OZB }
			572 = { set_state_controller_to = OZB }
			656 = { set_state_controller_to = OZB }
			25 = { set_state_controller_to = OZB }
			871 = { set_state_controller_to = OZB }
			890 = { set_state_controller_to = OZB }
			898 = { set_state_controller_to = OZB }
			3 = { set_state_controller_to = OZB }
			879 = { set_state_controller_to = OZB }
			910 = { set_state_controller_to = OZB }
			297 = { set_state_controller_to = OZB }
			216 = { set_state_controller_to = OZB }
			398 = { set_state_controller_to = OZB }
			337 = { set_state_controller_to = OZB }
			762 = { set_state_controller_to = OZB }
			477 = { set_state_controller_to = OZB }
			904 = { set_state_controller_to = OZB }
			633 = { set_state_controller_to = OZB }
			346 = { set_state_controller_to = OZB }
			565 = { set_state_controller_to = OZB }
			445 = { set_state_controller_to = OZB }
			332 = { set_state_controller_to = OZB }
			703 = { set_state_controller_to = OZB }
			617 = { set_state_controller_to = OZB }
			630 = { set_state_controller_to = OZB }
			54 = { set_state_controller_to = OZB }
			290 = { set_state_controller_to = OZB }
			631 = { set_state_controller_to = OZB }
			841 = { set_state_controller_to = OZB }
			818 = { set_state_controller_to = OZB }
			838 = { set_state_controller_to = OZB }
		}
	}
	liberate_zebrica = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
                        ### Sandwater
			951 = {
                            set_state_controller_to = SNW
                        }
			502 = {
                            set_state_controller_to = SNW
                        }
			503 = {
                            set_state_controller_to = SNW
                        }
                        ### Bucksana
                        BKS = {
			drop_cosmetic_tag = yes
                        }
			756 = {
                            set_state_controller_to = BKS
                        }
			712 = {
                            set_state_controller_to = BKS
                        }
			652 = {
                            set_state_controller_to = BKS
                        }
                        ### Moozambique
			758 = {
                            set_state_controller_to = MZB
                        }
			957 = {
                            set_state_controller_to = MZB
                        }
			958 = {
                            set_state_controller_to = MZB
                        }
			802 = {
                            set_state_controller_to = MZB
                        }
                        ### Cheeruta
			779 = {
                            set_state_controller_to = CHR
                        }
			### Alpacia
			665 = { set_state_controller_to = ALP }
			959 = { set_state_controller_to = ALP }
			### Olamia
			608 = { set_state_controller_to = OLM }
			### Zebrabwe
			696 = { set_state_controller_to = ZBR }
			629 = { set_state_controller_to = ZBR }
			### Maredia
			745 = { set_state_controller_to = MRD }
			733 = { set_state_controller_to = MRD }
			### Stripasi
			690 = { set_state_controller_to = SRP }
			### Zebrat
			823 = { set_state_controller_to = ZRT }
			856 = { set_state_controller_to = ZRT }
			884 = { set_state_controller_to = ZRT }
			887 = { set_state_controller_to = ZRT }
			75 = { set_state_controller_to = ZRT }
			912 = { set_state_controller_to = ZRT }
			### Bucksoy
			886 = { set_state_controller_to = BUK }
			### Kasteldacia
			855 = { set_state_controller_to = KST }
		}
	}
	make_moobucksan_armies = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
                        BKS = {
			set_cosmetic_tag = BKS_CONF
                        }
			665 = {
                            set_state_controller_to = BKS
                        }
			758 = {
                            set_state_controller_to = BKS
                        }
			957 = {
                            set_state_controller_to = BKS
                        }
			958 = {
                            set_state_controller_to = BKS
                        }
			802 = {
                            set_state_controller_to = BKS
                        }
			779 = {
                            set_state_controller_to = BKS
                        }
			959 = { set_state_controller_to = BKS }
		}
	}
	liberate_abyssinian_armies = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
                        ### Armies Group "A"
			541 = {
                            set_state_controller_to = AGA
                        }
			548 = {
                            set_state_controller_to = AGA
                        }
			572 = {
                            set_state_controller_to = AGA
                        }
			656 = {
                            set_state_controller_to = AGA
                        }
			25 = {
                            set_state_controller_to = AGA
                        }
                        ### Armies Group "B"
			886 = {
                            set_state_controller_to = AGB
                        }
			908 = {
                            set_state_controller_to = AGB
                        }
			871 = {
                            set_state_controller_to = AGB
                        }
			890 = {
                            set_state_controller_to = AGB
                        }
			898 = {
                            set_state_controller_to = AGB
                        }
			3 = {
                            set_state_controller_to = AGB
                        }
			879 = {
                            set_state_controller_to = AGB
                        }
			910 = {
                            set_state_controller_to = AGB
                        }
                        ### Armies Group "C"
			297 = {
                            set_state_controller_to = AGC
                        }
			216 = {
                            set_state_controller_to = AGC
                        }
			398 = {
                            set_state_controller_to = AGC
                        }
			337 = {
                            set_state_controller_to = AGC
                        }
			762 = {
                            set_state_controller_to = AGC
                        }
			477 = {
                            set_state_controller_to = AGC
                        }
			904 = {
                            set_state_controller_to = AGC
                        }
			633 = {
                            set_state_controller_to = AGC
                        }
			346 = {
                            set_state_controller_to = AGC
                        }
                        ### Armies Group "D"
			528 = {
                            set_state_controller_to = AGD
                        }
			954 = {
                            set_state_controller_to = AGD
                        }
			955 = {
                            set_state_controller_to = AGD
                        }
			585 = {
                            set_state_controller_to = AGD
                        }
			529 = {
                            set_state_controller_to = AGD
                        }
			542 = {
                            set_state_controller_to = AGD
                        }
		}
	}
	liberate_revolt_army = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
                        ### Zerbica Garrsion Revolt
			618 = {
                            set_state_controller_to = ZGR
                        }
			439 = {
                            set_state_controller_to = ZGR
                        }
			892 = {
                            set_state_controller_to = ZGR
                        }
			418 = {
                            set_state_controller_to = ZGR
                        }
			589 = {
                            set_state_controller_to = ZGR
                        }
			559 = {
                            set_state_controller_to = ZGR
                        }
			430 = {
                            set_state_controller_to = ZGR
                        }
		}
	}
	liberate_abyssinian_empire = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			### Tyrlitia
			502 = { set_state_controller_to = ABS }
			951 = { set_state_controller_to = ABS }
			503 = { set_state_controller_to = ABS }
			505 = { set_state_controller_to = ABS }
			952 = { set_state_controller_to = ABS }
			468 = { set_state_controller_to = ABS }
			496 = { set_state_controller_to = ABS }
			953 = { set_state_controller_to = ABS }
			601 = { set_state_controller_to = ABS }
			550 = { set_state_controller_to = ABS }
			956 = { set_state_controller_to = ABS }
			571 = { set_state_controller_to = ABS }
			567 = { set_state_controller_to = ABS }
			578 = { set_state_controller_to = ABS }
			562 = { set_state_controller_to = ABS }
			547 = { set_state_controller_to = ABS }
			529 = { set_state_controller_to = ABS }
			542 = { set_state_controller_to = ABS }
			528 = { set_state_controller_to = ABS }
			954 = { set_state_controller_to = ABS }
			955 = { set_state_controller_to = ABS }
			585 = { set_state_controller_to = ABS }
			612 = { set_state_controller_to = ABS }
			678 = { set_state_controller_to = ABS }
			711 = { set_state_controller_to = ABS }
			635 = { set_state_controller_to = ABS }
			654 = { set_state_controller_to = ABS }
			702 = { set_state_controller_to = ABS }
			608 = { set_state_controller_to = ABS }
			665 = { set_state_controller_to = ABS }
			758 = { set_state_controller_to = ABS }
			957 = { set_state_controller_to = ABS }
			779 = { set_state_controller_to = ABS }
			958 = { set_state_controller_to = ABS }
			802 = { set_state_controller_to = ABS }
			756 = { set_state_controller_to = ABS }
			959 = { set_state_controller_to = ABS }
			712 = { set_state_controller_to = ABS }
			652 = { set_state_controller_to = ABS }
			961 = { set_state_controller_to = ABS }
			
			### Farazia
			629 = { set_state_controller_to = ABS }
			696 = { set_state_controller_to = ABS }
			745 = { set_state_controller_to = ABS }
			733 = { set_state_controller_to = ABS }
			781 = { set_state_controller_to = ABS }
			813 = { set_state_controller_to = ABS }
			855 = { set_state_controller_to = ABS }
			690 = { set_state_controller_to = ABS }
			746 = { set_state_controller_to = ABS }
			777 = { set_state_controller_to = ABS }
			787 = { set_state_controller_to = ABS }
			823 = { set_state_controller_to = ABS }
			884 = { set_state_controller_to = ABS }
			75 = { set_state_controller_to = ABS }
			912 = { set_state_controller_to = ABS }
			908 = { set_state_controller_to = ABS }
			886 = { set_state_controller_to = ABS }
			833 = { set_state_controller_to = ABS }
			887 = { set_state_controller_to = ABS }
			856 = { set_state_controller_to = ABS }
			
			### Sudern-Zebrika
			618 = { set_state_controller_to = ABS }
			439 = { set_state_controller_to = ABS }
			892 = { set_state_controller_to = ABS }
			418 = { set_state_controller_to = ABS }
			589 = { set_state_controller_to = ABS }
			559 = { set_state_controller_to = ABS }
			430 = { set_state_controller_to = ABS }
			541 = { set_state_controller_to = ABS }
			548 = { set_state_controller_to = ABS }
			572 = { set_state_controller_to = ABS }
			656 = { set_state_controller_to = ABS }
			25 = { set_state_controller_to = ABS }
			871 = { set_state_controller_to = ABS }
			890 = { set_state_controller_to = ABS }
			898 = { set_state_controller_to = ABS }
			3 = { set_state_controller_to = ABS }
			879 = { set_state_controller_to = ABS }
			910 = { set_state_controller_to = ABS }
			297 = { set_state_controller_to = ABS }
			216 = { set_state_controller_to = ABS }
			398 = { set_state_controller_to = ABS }
			337 = { set_state_controller_to = ABS }
			762 = { set_state_controller_to = ABS }
			477 = { set_state_controller_to = ABS }
			904 = { set_state_controller_to = ABS }
			633 = { set_state_controller_to = ABS }
			346 = { set_state_controller_to = ABS }
			565 = { set_state_controller_to = ABS }
			445 = { set_state_controller_to = ABS }
			332 = { set_state_controller_to = ABS }
			703 = { set_state_controller_to = ABS }
			617 = { set_state_controller_to = ABS }
			630 = { set_state_controller_to = ABS }
			54 = { set_state_controller_to = ABS }
			290 = { set_state_controller_to = ABS }
			631 = { set_state_controller_to = ABS }
			841 = { set_state_controller_to = ABS }
			818 = { set_state_controller_to = ABS }
			838 = { set_state_controller_to = ABS }
		}
	}
}

debug_decisions = {
	buff_all = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			add_ideas = BuffAll
		}
	}
	remove_buff_all = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			if = {
				limit = {
					has_idea = BuffAll
				}
				remove_ideas = BuffAll
			}
		}
	}
	add_attack_bonus = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			add_ideas = BuffAttack
		}
	}
	remove_attack_bonus = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			if = {
				limit = {
					has_idea = BuffAttack
				}
				remove_ideas = BuffAttack
			}
		}
	}
	add_defence_bonus = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			add_ideas = BuffDefence
		}
	}
	remove_defence_bonus = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			if = {
				limit = {
					has_idea = BuffDefence
				}
				remove_ideas = BuffDefence
			}
		}
	}
	add_efficiency_growth_debug = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			add_ideas = add_production_efficiency
		}
	}
		
	remove_efficiency_growth_debug = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			if = {
				limit = {
					has_idea = add_production_efficiency
				}
				remove_ideas = add_production_efficiency
			}
			if = {
				limit = {
					has_idea = decrease_production_efficiency
				}
				remove_ideas = decrease_production_efficiency
			}	
		}
	}
		
	decrease_efficiency_growth_debug = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			add_ideas = decrease_production_efficiency
		}

		ai_will_do = {
			base = 0
		}
	}

	create_recruitable_operative_not_to_spy_master_debug = {
		icon = generic_research

		available = {
			always = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			create_operative_leader = {
				bypass_recruitment = no
				available_to_spy_master = no
			}
		}

		ai_will_do = {
			base = 0
		}
	}

	create_recruitable_operative_debug = {
		icon = generic_research

		available = {
			always = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			create_operative_leader = {
				bypass_recruitment = no
			}
		}

		ai_will_do = {
			base = 0
		}
	}


	

	

	add_random_nationality = {
		available = {
			num_of_operatives > 0
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			random_country = {
				limit = {
					NOT = { tag = FROM }
				}
				FROM = {
					random_operative = {
						add_nationality = PREV.PREV
					}
				}
			}
		}

		ai_will_do = {
			base = 0
		}

	}

	slot_machine = { # we pegi 18 now
		available = {
			always = yes
		}

		visible = {
			always = yes
		}

		days_remove = 777

		modifier = {
			operative_slot = 99
		}
	}

	decryption_tech_1 = {
		days_remove = 100
		modifier = {
			decryption = 1
		}
	}

	decryption_tech_2 = {
		days_remove = 100
		modifier = {
			decryption = 1
		}
	}

	decryption_tech_3 = {
		days_remove = 100
		modifier = {
			decryption = 1
		}
	}

	encryption_tech_1 = {
		days_remove = 100
		modifier = {
			encryption = 1
		}
	}

	encryption_tech_2 = {
		days_remove = 100
		modifier = {
			encryption = 1
		}
	}

	encryption_tech_3 = {
		days_remove = 100
		modifier = {
			encryption = 1
		}
	}
}
